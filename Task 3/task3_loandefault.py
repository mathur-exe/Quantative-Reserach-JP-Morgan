# -*- coding: utf-8 -*-
"""Task3_LoanDefault.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MfX08veyMGlFGAKekzXFSRS_fSjzVeQw
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.linear_model import LogisticRegression
from sklearn import metrics

df = pd.read_csv('/content/Task 3 and 4_Loan_Data.csv')
df.head(10)

df['payment_to_income'] = df['loan_amt_outstanding'] / df['income']
df ['debt_to_income'] = df['total_debt_outstanding'] / df['income']
df = df.drop(['customer_id', 'loan_amt_outstanding', 'total_debt_outstanding', 'income'], 1)
df.head()

features = df.columns
print(features)

corr_matrix = df.corr()
corr_matrix

type(corr_matrix)

lb = 0.5
ub = 0.9
for index, row in corr_matrix.iterrows():
    for column in corr_matrix.columns:
        value = row[column]
        if ub <= value <= ub:
            print(f"Value {value} at index {index} in column {column} is within the range.")

corr_matrix = df.corr()
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', square=True)
plt.title('Correlation Matrix')
plt.show()

model = LogisticRegression(random_state=0, solver='liblinear', tol=1e-5, max_iter=10000).fit(df[features], df['default'])
print(model.coef_, model.intercept_)

y_pred = model.predict(df[features])

fpr, tpr, thresholds = metrics.roc_curve(df['default'], y_pred)
print((1.0*(abs(df['default'] - y_pred)).sum()) / len(df))
print(metrics.auc(fpr, tpr))

